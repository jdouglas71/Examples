

The Armadillo Software Protection Scheme.
------------------------------------------

Armadillo is the product we use for registration and demo purposes for Fusion Pro and FusionChrom. Armadillo protects software
by encrypting and wrapping the binary (e.g. FusionChrom.exe). The Armadillo wrapper contains user defined "certificates" that
are unlocked using registration keys which, in turn, are generated by us.

The Current Scheme
--------------------
The current scheme uses three certifcates: Timebomb, Extender and Permanent. Timebomb is the default certifcate and expires 
45 days after installation. Extender has a 15 day expiration date and is used when customers need an "extension" of the demo
period. The Permanent certificate has no expiration date and allows the customer to use the product indefinitely. All certificates
are hardware locked, meaning that are tied directly to the hardware of the computer they are installed on (using the hardware
fingerprint generated by the Armadillo wrapper). That means if the hardware fingerprint changes in any way, any keys installed
for the certificates automatically expire and the program reverts to using the defualt certificate, Timebomb. The hierarchy of 
certificates is established by the order they are created in the Armadillo project, so that Permanent supercedes Extender and 
Extender supercedes Timebomb.

Proposed Scheme for Application Module Licensing
--------------------------------------------------
Our goal is to allow the user to license the Application Modules for either Method Development, Method Validation, or both in 
FusionChrom 8.0. In 8.x, we will implement Application Module Licensing via the Fusion User License database. In 8.0, we can 
achieve the same thing using Armadillo certificates. Each certificate can have any number of environment variables associated 
with it that can be read by progarm at runtime. These environment variables will only be set if the certificate is registered. 
Coupled with the ability to determine programatically whether the program is in "demo" mode (which we already leverage successfully
in the current 8.0 codebase and has been tested extensively), Armadillo gives us the ability to determine whether the
program has been registered (not in demo mode) and what the current certificate is. In addtion to Timebomb and Extender, we will
now define three other certifciates, Method Development, Method Validation and Both. The Armadillo wrapper automatically determines
what certificate any given key is generated for, so all we have to do is generate a key using the appropriate certificate (using
the registration page on \\beethoven) and the program will be able to figure out what Application Modules are available to the user.

For the case where the user has purchased one Application Module and wants the other, there will be a Start Menu item that forces
the Registration Dialog to come up in FusionChrom. Entering a key for a certificate higher in the hierarchy will override the 
current certificate (hence the need for a "Both" certificate). Please note that this scheme is a shorterm solution. The 8.x
implementation using User Licenses will be much more robust.



